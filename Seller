using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Task1
{
    class Program
    {
        static void Main(string[] args)
        {
            bool isOpen = true;
            string userInput;
            Buyer buyer = new Buyer();
            Shop shop = new Shop();
            Console.WriteLine("Добро пожаловать в магазин");
            Console.WriteLine("1.Показать покупки. 2.Показать товары. 3.Купить. 4.Выйти из магазина");

            while (isOpen)
            {
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case "1":
                        buyer.ShowProducts();
                        break;
                    case "2":
                        shop.ShowProducts();
                        break;
                    case "3":
                        buyer.BuyItem(shop);
                        break;
                    case "4":
                        isOpen = false;
                        break;
                }
            }
        }
    }

    class Product
    {
        public string Name { get; private set; }
        public int Price { get; private set; }

        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }

        public void ProductInfo(int productID)
        {
            Console.WriteLine($"{productID + 1}.{Name}, Цена {Price}");
        }
    }

    class Shop
    {
        private int _shopAccount = 2000;
        private List<Product> _products = new List<Product>();

        public Shop()
        {
            _products.Add(new Product("Брюки", 950));
            _products.Add(new Product("Ботинки", 650));
            _products.Add(new Product("Рубашка", 200));
            _products.Add(new Product("Пиджак", 1000));
            _products.Add(new Product("Галстук", 100));
        }

        public List<Product> GetProducts()
        {
            List<Product> products = new List<Product>();

            for (int i = 0; i < _products.Count; i++)
            {
                products.Add(_products[i]);
            }
            return products;
        }

        public void SellItem(int itemID)
        {
            _shopAccount += GetProducts()[itemID].Price;
        }

        public virtual void ShowProducts()
        {
            Console.WriteLine($"Касса магазина {_shopAccount}");

            for (int i = 0; i < _products.Count; i++)
            {
                _products[i].ProductInfo(i);
            }
        }
    }

    class Buyer: Shop
    {
        private Shop _shop = new Shop();
        private List<Buyer> _purchasedProducts = new List<Buyer>();
        private int _money = 2000;
        private string _productName;

        public Buyer(string productName)
        {
            _productName = productName;
        }
        public Buyer() { }

        public override void ShowProducts()
        {
            Console.WriteLine($"Ваши деньги {_money}");

            for (int i = 0; i < _purchasedProducts.Count; i++)
            {
                Console.WriteLine($"В вашей сумке {_purchasedProducts[i]._productName}");
            }
        }

        public void BuyItem(Shop shop)
        {
            int itemID;
            Console.WriteLine("Что вы хотите купить?");
            itemID = GetNumber();

            if (itemID <= _shop.GetProducts().Count)
            {
                if (PurchasingAbility(shop, itemID - 1))
                {
                    _money -= shop.GetProducts()[itemID - 1].Price;
                    _purchasedProducts.Add(new Buyer(shop.GetProducts()[itemID - 1].Name));
                    shop.SellItem(itemID - 1);
                }
                else
                {
                    Console.WriteLine("У вас не хватает денег");
                }
            }
            else
            {
                Console.WriteLine("Нет такого товара");
            }
        }

        private bool PurchasingAbility(Shop shop, int itemID)
        {
            if (_money - shop.GetProducts()[itemID].Price >= 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        private int GetNumber()
        {
            bool isNumber = int.TryParse(Console.ReadLine(), out int number);

            if (isNumber == false)
            {
                Console.WriteLine("Введите число");
                number = 0;
                return number;
            }
            else
            {
                return number;
            }
        }
    }    
}   

    

