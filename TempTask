using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace TestDrive
{
    class Pacman
    {
        static void Main(string[] args)
        {
            bool isOpen = true;
            string userInput;
            Player player = new Player();
            Merchant merchant = new Merchant();
            Console.WriteLine("Добро пожаловать в лавку");
            Console.WriteLine("1.Показать инвентарь. 2.Показать товары. 3.Купить. 4.Выйти из лавки");

            while (isOpen)
            {
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case "1":
                        player.ShowInventory();
                        break;
                    case "2":
                        merchant.ShowGoods();
                        break;
                    case "3":
                        player.BuyItem(merchant);
                        break;                    
                    case "4":
                        isOpen = false;
                        break;
                }
            }
        }
    }

    class Item
    {
        public string Name { get; private set; }
        public string Stats { get; private set; }
        public int Price { get; private set; }

        public Item(string name, string stats, int price)
        {
            Name = name;
            Stats = stats;
            Price = price;
        }        
    }
  
    class Slot
    {
        public Item _item { get; private set; }
        public int _amount { get; private set; }
        public string itemName => _item.Name;
        
        public Slot(Item item, int amount)
        {
            _item = item;
            _amount = amount;
        }

        public void ShowItem(int itemID)
        {
            Console.WriteLine($"{itemID + 1}.{_item.Name}, Параметры: {_item.Stats}, Цена: {_item.Price}, кол: {_amount}");
        }
        
        public void ReduceAmount(int count)
        {
            if (_amount > 0)
            {
                _amount -= count;
            }            
        }
        
        public void IncreaseAmount(int count)
        {
            _amount += count;
        }
    }

    class ItemsInGame
    {
        private static Random _random = new Random();
        private List<Item> _items = new List<Item>();

        public ItemsInGame()
        {
            _items.Add(new Item("Шипованый гульфик", "Атака +3", 30));
            _items.Add(new Item("Зелье идиотской храбрости", "Атака +2", 20));
            _items.Add(new Item("Шлем отваги", "Атака +1", 30));
            _items.Add(new Item("Фляга клея", "Инициатива +2", 40));
            _items.Add(new Item("Утка обречённости", "Уровень -2", 60));
            _items.Add(new Item("Хотельное кольцо", "Проклятье -1", 50));
            _items.Add(new Item("Трёхручный меч", "Атака +3", 30));
        }

        public List<Item> GetItems()
        {
            List<Item> items = new List<Item>();
            int minItemsCount = 2;
            int maxItemsCount = 7;
            int itemsCount = _random.Next(minItemsCount, maxItemsCount);

            for (int i = 0; i < itemsCount; i++)
            {
                items.Add(_items[i]);
            }
            return items;
        }
    }

    class Player
    {
        private Merchant merchant = new Merchant();
        private ItemsInGame _itemsInGame = new ItemsInGame();
        private List<Slot> _inventory = new List<Slot>();
        private static Random _random = new Random();
        private int _money = 100;

        public Player()
        {
            FillInventory();
        }        

        public void ShowInventory()
        {
            Console.WriteLine($"Ваши вещи    Ваши деньги {_money}");

            for (int i = 0; i < _inventory.Count; i++)
            {
                _inventory[i].ShowItem(i);
            }       
        }

        private bool CompareItemName(int itemID)
        {
            foreach (var item in _inventory)
            {
                if (item.itemName == merchant.GetShopItem()[itemID].itemName)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            return false;            
        }

        private void FillInventory()
        {
            int minItemsAmount = 1;
            int maxItemsAmount = 3;
            int itemAmount = _random.Next(minItemsAmount, maxItemsAmount);

            foreach (var item in _itemsInGame.GetItems())
            {
                _inventory.Add(new Slot(item, itemAmount));
            }
        }        

        

        public void BuyItem(Merchant merchant)
        {
            int itemID;
            int itemCount;
            Console.WriteLine("Что вы хотите купить?");
            itemID = GetNumber();
            Console.WriteLine("Сколько вы хотите купить?");
            itemCount = GetNumber();

            if (itemID <= merchant.GetShopItem().Count)
            {
                if (itemCount <= merchant.GetItem(itemID -1)._amount)
                {
                    if (_money - merchant.GetItem(itemID -1)._item.Price * itemCount >= 0)
                    {
                        _money -= merchant.GetItem(itemID -1)._item.Price * itemCount;

                        if (CompareItemName(itemID - 1))
                        {
                            _inventory[itemID - 1].IncreaseAmount(itemCount);
                        }
                        else
                        {
                            _inventory.Add(merchant.GetItem(itemID - 1));
                        }
                        merchant.GetItem(itemID -1).ReduceAmount(itemCount);
                        merchant.SellItem(itemID - 1);
                    }
                    else
                    {
                        Console.WriteLine("У вас не хватает денег");
                    }
                }
                else
                {
                    Console.WriteLine("Нет такого количества");
                }
            }
            else
            {
                Console.WriteLine("Нет такого товара");
            }
        }

        //public void BuyItem(Merchant merchant)
        //{
        //    int itemID;
        //    int itemCount;
        //    Console.WriteLine("Что вы хотите купить?");
        //    itemID = GetNumber();
        //    Console.WriteLine("Сколько вы хотите купить?");
        //    itemCount = GetNumber();

        //    if (itemID <= merchant.GetShopItem().Count)
        //    {
        //        if (itemCount <= merchant.GetShopItem()[itemID - 1]._amount)
        //        {
        //            if (_money - merchant.GetShopItem()[itemID - 1]._item.Price * itemCount >= 0)
        //            {
        //                _money -= merchant.GetShopItem()[itemID - 1]._item.Price * itemCount;

        //                if (CompareItemName(itemID - 1))
        //                {
        //                    _inventory[itemID - 1].IncreaseAmount(itemCount);
        //                }
        //                else
        //                {
        //                    _inventory.Add(merchant.GetShopItem()[itemID - 1]);
        //                }
        //                merchant.GetShopItem()[itemID - 1].ReduceAmount(itemCount);
        //                merchant.SellItem(itemID - 1);
        //            }
        //            else
        //            {
        //                Console.WriteLine("У вас не хватает денег");
        //            }
        //        }
        //        else
        //        {
        //            Console.WriteLine("Нет такого количества");
        //        }
        //    }
        //    else
        //    {
        //        Console.WriteLine("Нет такого товара");
        //    }
        //}

        private int GetNumber()
        {
            bool isNumber = int.TryParse(Console.ReadLine(), out int number);

            if (isNumber == false)
            {
                Console.WriteLine("Введите число");
                number = 0;
                return number;
            }
            else
            {
                return number;
            }
        }
    }

    class Merchant
    {
        private static Random _random = new Random();
        private ItemsInGame _itemsInGame = new ItemsInGame();
        private List<Slot> _shop = new List<Slot>();
        private int _shopAccount = 200;

        public Merchant()
        {
            FillShop();
        }

        public Slot GetItem(int itemID)
        {
            Slot item = GetShopItem()[itemID];
            return item;
        }

        public List<Slot> GetShopItem()
        {
            List<Slot> shopItems = new List<Slot>();

            foreach (var item1 in _shop)
            {
                shopItems.Add(item1);
            }            
            return shopItems;
        }        

        public void SellItem(int itemID)
        {
            _shopAccount += _shop[itemID]._item.Price * _shop[itemID]._amount;
        }

        public void ShowGoods()
        {
            Console.WriteLine($"Товары в магазине.   Деньги торговца {_shopAccount}");

            for (int i = 0; i < _shop.Count; i++)
            {
                _shop[i].ShowItem(i);
            }
        }

        private void FillShop()
        {
            int minItemsAmount = 1;
            int maxItemsAmount = 3;
            int itemAmount = _random.Next(minItemsAmount, maxItemsAmount);

            foreach (var item in _itemsInGame.GetItems())
            {
                _shop.Add(new Slot(item, itemAmount));
            }
        }
    }
}
