using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Task2
{
    class Program
    {
        static void Main(string[] args)
        {
            ServiceStation serviceStation = new ServiceStation();
            serviceStation.FillWarehouse();
           // warehouse.ShowWarehouse();
            serviceStation.CreateQueue();
            serviceStation.ShowClient();
            Console.ReadLine();
        }
    }

    class ServiceStation
    {
        private int ShopAccount = 1000;
        private Random _random = new Random();
        private Queue<Client> _clients = new Queue<Client>();
        public ServiceStation()
        {
        }

        public void FillWarehouse()
        {
            
        }

        public void ServClients()
        {
            bool isWork = true;

            while (isWork && _clients.Count > 0)
            {

            }
        }

        public void ShowClient()
        {
            foreach (var client in _clients)
            {
                Console.WriteLine($"Требуется замена {client.BrokenPart.PartName}");
            }
        }

        public void CreateQueue()
        {
            int minNumberClient = 6;
            int maxNumberClient = 10;
            int clientsCount = _random.Next(minNumberClient, maxNumberClient);

            for (int i = 0; i < clientsCount; i++)
            {
                _clients.Enqueue(new Client());
            }
        }
    }


    class Client
    {

        private static Random _random = new Random();
        public Part BrokenPart { get; private set; }

        public Client()
        {
            IdentifyBreackdown();
        }


        private void IdentifyBreackdown()
        {
            BrokenPart = GetPart();
        }

        public Part GetPart()
        {
            List<Part> parts = new List<Part>();
            int part;
            Part brokenPart;
            parts.Add(new Part("Колодки", 250));
            parts.Add(new Part("Фильтр воздушный", 100));
            parts.Add(new Part("Фильтр масляный", 200));
            parts.Add(new Part("Лампа ДС", 150));
            parts.Add(new Part("Масло", 500));
            parts.Add(new Part("Свеча", 50));
            part = _random.Next(0, parts.Count);
            brokenPart = parts[part];
            return brokenPart;
        }
    }

    class Warehouse
    {
        private List<WarehouseCell> _partsInWarehouse = new List<WarehouseCell>();       

        public Warehouse()
        {           
            _partsInWarehouse.Add(new WarehouseCell(new Part("Колодки", 250), 2));
            _partsInWarehouse.Add(new WarehouseCell(new Part("Свеча", 50), 10));
            _partsInWarehouse.Add(new WarehouseCell(new Part("Масло", 500), 2));
            _partsInWarehouse.Add(new WarehouseCell(new Part("Лампа ДС", 150), 6));
            _partsInWarehouse.Add(new WarehouseCell(new Part("Фильтр масляный", 200), 4));
            _partsInWarehouse.Add(new WarehouseCell(new Part("Фильтр воздушный", 100), 4));
        }                        
    }

    class WarehouseCell
    {
        private Part _part;
        private int _partAmount;

        public WarehouseCell(Part part, int partAmount)
        {
            _partAmount = partAmount;
            _part = part;
        }
    }

    class Part
    {
        public string PartName { get; private set; }
        public int PartPrice { get; private set; }

        public Part(string partName, int partPrice)
        {
            PartName = partName;
            PartPrice = partPrice;
        }
    }
}
